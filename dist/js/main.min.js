function createEl(e){var t='<div  class="img-wrapper"><img class="photo" src="'+e.photo_50+'"></div>',n='<span class="title">'+e.first_name+" "+e.last_name+"</span>",i='<a class="add-btn" href="#"></a>',r=document.createElement("li");return r.setAttribute("class","friend-item"),r.setAttribute("draggable","true"),r.setAttribute("data-id",e.uid),r.insertAdjacentHTML("afterbegin",t+n+i),r}function isChosen(e){for(var t=0;t<friendsList.length;t++)if(friendsList[t]==e)return!0;return!1}function addFriend(e){for(var t=0;t<friendsList.length;t++)if(friendsList[t]==e)return friendsList.splice(t,1);friendsList.push(e)}function moveFriend(e){if(e.target.matches(".add-btn")){var t=e.target.parentElement,n=t.dataset.id;t.matches(".moved")?(leftList.appendChild(t),t.classList.remove("moved")):(rightList.appendChild(t),t.classList.add("moved")),addFriend(n),console.log(friendsList)}}var friendsList=[],friends;new Promise(function(e){"complete"===document.readyState?e():window.onload=e}).then(function(){return new Promise(function(e,t){VK.init({apiId:5384604}),VK.Auth.login(function(n){n.session?e(n):t(new Error("Не удалось авторизоваться"))},2)})}).then(function(){return new Promise(function(e,t){VK.api("friends.get",{fields:"photo_50"},function(n){n.error?t(new Error(n.error.error_msg)):(friends=n.response,friends.forEach(function(e,t,n){if(isChosen(e))rightList.appendChild(i);else{var i=createEl(e);leftList.appendChild(i)}}),e())})})})["catch"](function(e){alert("Ошибка: "+e.message)});var input=document.querySelector(".filter");input.addEventListener("keyup",function(e){e.target.matches(".filter__input_right")&&friendsList.forEach(function(t){friends.forEach(function(n){n.uid==t&&(n.first_name.toLowerCase().includes(e.target.value)?console.log("magic!!"):console.log("dark(("))})})}),leftList.addEventListener("dragstart",moveFriend),columns.addEventListener("click",moveFriend);
//# sourceMappingURL=data:application/json;base64,
